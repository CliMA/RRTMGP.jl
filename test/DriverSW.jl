using Test
using JRRTMGP
using NCDatasets
using JRRTMGP.mo_optical_props
using JRRTMGP.mo_rte_solver_kernels
using JRRTMGP.fortran_intrinsics
using JRRTMGP.mo_util_array
using JRRTMGP.mo_gas_optics_rrtmgp
using JRRTMGP.mo_gas_concentrations
using JRRTMGP.mo_rte_sw
using JRRTMGP.mo_fluxes
using JRRTMGP.mo_load_coefficients
using JRRTMGP.mo_rfmip_io

# This code is part of RRTM for GCM Applications - Parallel (RRTMGP)
#
# Contacts: Robert Pincus and Eli Mlawer
# email:  rrtmgp@aer.com
#
# Copyright 2015-2018,  Atmospheric and Environmental Research and
# Regents of the University of Colorado.  All right reserved.
#
# Use and duplication is permitted under the terms of the
#    BSD 3-clause license, see http://opensource.org/licenses/BSD-3-Clause
# -------------------------------------------------------------------------------------------------
#
# Example program to demonstrate the calculation of shortwave radiative fluxes in clear, aerosol-free skies.
#   The example files come from the Radiative Forcing MIP (https://www.earthsystemcog.org/projects/rfmip/)
#   The large problem (1800 profiles) is divided into blocks
#
# Program is invoked as rrtmgp_rfmip_sw [block_size input_file  coefficient_file upflux_file downflux_file]
#   All arguments are optional but need to be specified in order.
#
# -------------------------------------------------------------------------------------------------
#
# Error checking: Procedures in rte+rrtmgp return strings which are empty if no errors occured
#   Check the incoming string, print it out and stop execution if non-empty
#

# -------------------------------------------------------------------------------------------------
#
# Main program
#
# -------------------------------------------------------------------------------------------------
function run_driver(rfmip_file, kdist_file, nblocks_iterations=nothing)
  # --------------------------------------------------
  #
  # Modules for working with rte and rrtmgp
  #
  # Working precision for real variables
  #
  # use mo_rte_kind,           only: FT
  #
  # Array utilities
  #
  # use mo_util_array,         only: zero_array
  #
  # Optical properties of the atmosphere as array of values
  #   In the longwave we include only absorption optical depth (_1scl)
  #   Shortwave calculations use optical depth, single-scattering albedo, asymmetry parameter (_2str)
  #
  # use mo_optical_props,      only: ty_optical_props_2str
  #
  # Gas optics: maps physical state of the atmosphere to optical properties
  #
  # use mo_gas_optics_rrtmgp,  only: ty_gas_optics_rrtmgp
  #
  # Gas optics uses a derived type to represent gas concentrations compactly
  #
  # use mo_gas_concentrations, only: ty_gas_concs
  #
  # RTE shortwave driver
  #
  # use mo_rte_sw,             only: rte_sw
  #
  # RTE driver uses a derived type to reduce spectral fluxes to whatever the user wants
  #   Here we're just reporting broadband fluxes
  #
  # use mo_fluxes,             only: ty_fluxes_broadband
  # --------------------------------------------------
  #
  # modules for reading and writing files
  #
  # RRTMGP's gas optics class needs to be initialized with data read from a netCDF files
  #
  # use mo_load_coefficients,  only: load_and_init
  # use mo_rfmip_io,           only: read_size, read_and_block_pt, read_and_block_gases_ty, unblock_and_write, read_and_block_sw_bc, determine_gas_names

#ifdef USE_TIMING
  #
  # Timing library
  #
  # use gptl,                  only: gptlstart, gptlstop, gptlinitialize, gptlpr, gptlfinalize, gptlsetoption,
  #                                  gptlpercent, gptloverhead
#endif
  # implicit none
  # --------------------------------------------------
  #
  # Local variables
  #


  # character(len=132) :: flxdn_file, flxup_file
  # integer            :: nargs, ncol, nlay, nbnd, ngpt, nexp, nblocks, block_size, forcing_index
  # logical            :: top_at_1
  # integer            :: b, icol, ibnd, igpt
  # character(len=4)   :: block_size_char, forcing_index_char = '1'

  # character(len=32 ), dimension(:),   allocatable :: kdist_gas_names, rfmip_gas_games
  # real(FT), dimension(:,:,:),         allocatable :: p_lay, p_lev, t_lay, t_lev # block_size, nlay, nblocks
  # real(FT), dimension(:,:,:), target, allocatable :: flux_up, flux_dn
  # real(FT), dimension(:,:  ),         allocatable :: surface_albedo, total_solar_irradiance, solar_zenith_angle
  #                                                    # block_size, nblocks
  # real(FT), dimension(:,:  ),         allocatable :: sfc_alb_spec # nbnd, block_size; spectrally-resolved surface albedo
  #
  # Classes used by rte+rrtmgp
  #
  # type(ty_gas_optics_rrtmgp)                     :: k_dist
  # type(ty_optical_props_2str)                    :: optical_props
  # type(ty_fluxes_broadband)                      :: fluxes

  # real(FT), dimension(:,:), allocatable          :: toa_flux # block_size, ngpt
  # real(FT), dimension(:  ), allocatable          :: def_tsi, mu0    # block_size
  # logical , dimension(:,:), allocatable          :: usecol # block_size, nblocks
  #
  # ty_gas_concentration holds multiple columns; we make an array of these objects to
  #   leverage what we know about the input file
  #
  # type(ty_gas_concs), dimension(:), allocatable  :: gas_conc_array
  FT = Float64
  deg_to_rad = acos(-FT(1))/FT(180)

  # -------------------------------------------------------------------------------------------------
  #
  # Code starts
  #   all arguments are optional
  #

  ds = Dataset(rfmip_file, "r") # reading the NetCDF file in read only mode
  ds_k_dist = Dataset(kdist_file, "r") # reading the NetCDF file in read only mode

  ncol, nlay, nexp = read_size(ds)

  forcing_index = 1
  block_size = 8
  # error("Done")

  #
  # How big is the problem? Does it fit into blocks of the size we've specified?
  #
  if mod(ncol*nexp, block_size) â‰  0
    error("rrtmgp_rfmip_sw: number of columns does not fit evenly into blocks.")
  end
  nblocks = Int((ncol*nexp)/block_size)
  println("Doing $(nblocks) blocks of size $(block_size)")

  # TODO: Fix readme
  # read(forcing_index_char, "(i4)") forcing_index
  if (forcing_index < 1 || forcing_index > 3)
    error("Forcing index is invalid (must be 1,2 or 3)")
  end
  flxdn_file = "rsd_Efx_RTE-RRTMGP-181204_rad-irf_r1i1p1f" * string(forcing_index) * "_gn.nc"
  flxup_file = "rsu_Efx_RTE-RRTMGP-181204_rad-irf_r1i1p1f" * string(forcing_index) * "_gn.nc"

  #
  # Identify the set of gases used in the calculation based on the forcing index
  #   A gas might have a different name in the k-distribution than in the files
  #   provided by RFMIP (e.g. 'co2' and 'carbon_dioxide')
  #
  # names_in_kdist, names_in_file = determine_gas_names(ds_k_dist, forcing_index)
  kdist_gas_names, rfmip_gas_games = determine_gas_names(ds_k_dist, forcing_index)
  print("Calculation uses RFMIP gases: ")
  @show rfmip_gas_games

  # --------------------------------------------------
  #
  # Prepare data for use in rte+rrtmgp
  #
  #
  # Allocation on assignment within reading routines
  #
  p_lay, p_lev, t_lay, t_lev = read_and_block_pt(ds, block_size)
  #
  # Are the arrays ordered in the vertical with 1 at the top or the bottom of the domain?
  #

  # test_data(p_lay, "p_lay")
  # test_data(p_lev, "p_lev")
  # test_data(t_lay, "t_lay")
  # test_data(t_lev, "t_lev")

  top_at_1 = p_lay[1, 1, 1] < p_lay[1, nlay, 1]

  #
  # Read the gas concentrations and surface properties
  #
  gas_conc_array = read_and_block_gases_ty(ds, block_size, kdist_gas_names, rfmip_gas_games)
  surface_albedo, total_solar_irradiance, solar_zenith_angle = read_and_block_sw_bc(ds, block_size)

  # test_data(surface_albedo, "surface_albedo")
  # test_data(total_solar_irradiance, "total_solar_irradiance")
  # test_data(solar_zenith_angle, "solar_zenith_angle")

  #
  # Read k-distribution information. load_and_init() reads data from netCDF and calls
  #   k_dist%init(); users might want to use their own reading methods
  #
  k_dist = load_and_init(ds_k_dist, gas_conc_array[1])
  !source_is_external(k_dist) && error("rrtmgp_rfmip_sw: k-distribution file is not SW")

  # test_data(k_dist.optical_props.band_lims_wvn, "k_dist_op_band_lims_wvn")
  # test_data(k_dist.optical_props.gpt2band, "k_dist_op_gpt2band")
  # test_data(k_dist.optical_props.band2gpt, "k_dist_op_band2gpt")

  nbnd = get_nband(k_dist.optical_props)
  ngpt = get_ngpt(k_dist.optical_props)

  toa_flux = Array{FT}(undef, block_size, get_ngpt(k_dist.optical_props))
  def_tsi = Array{FT}(undef, block_size)
  usecol = Array{Bool}(undef, block_size, nblocks)
  #
  # RRTMGP won't run with pressure less than its minimum. The top level in the RFMIP file
  #   is set to 10^-3 Pa. Here we pretend the layer is just a bit less deep.
  #   This introduces an error but shows input sanitizing.
  #
  if top_at_1
    p_lev[:,1,:] .= get_press_min(k_dist) + eps(FT)
  else
    p_lev[:,nlay+1,:] .= get_press_min(k_dist) + eps(FT)
  end
  # test_data(p_lev, "p_lev_2")

  #
  # RTE will fail if passed solar zenith angles greater than 90 degree. We replace any with
  #   nighttime columns with a default solar zenith angle. We'll mask these out later, of
  #   course, but this gives us more work and so a better measure of timing.
  #
  for b = 1:nblocks
    usecol[1:block_size,b] .= solar_zenith_angle[1:block_size,b] .< FT(90) - FT(2) * spacing(FT(90))
  end
  # test_data(usecol, "usecol")

  #
  # Allocate space for output fluxes (accessed via pointers in ty_fluxes_broadband),
  #   gas optical properties, and source functions. The %alloc() routines carry along
  #   the spectral discretization from the k-distribution.
  #
  flux_up = Array{FT}(undef, block_size, nlay+1, nblocks)
  flux_dn = Array{FT}(undef, block_size, nlay+1, nblocks)
  mu0 = Array{FT}(undef, block_size)
  sfc_alb_spec = Array{FT}(undef, nbnd,block_size)
  optical_props = ty_optical_props_2str(FT, Int)
  copy_and_alloc!(optical_props, block_size, nlay, k_dist.optical_props)
  # test_data(optical_props.band_lims_wvn, "DriverSW_op_band_lims_wvn")
  # test_data(optical_props.gpt2band, "DriverSW_op_gpt2band")
  # test_data(optical_props.band2gpt, "DriverSW_op_band2gpt")

  #$acc enter data create(optical_props, optical_props%tau, optical_props%ssa, optical_props%g)
  #$acc enter data create (toa_flux, def_tsi)
  #$acc enter data create (sfc_alb_spec, mu0)
  # --------------------------------------------------
#ifdef USE_TIMING
  #
  # Initialize timers
  #
  # ret = gptlsetoption (gptlpercent, 1)        # Turn on "% of" print
  # ret = gptlsetoption (gptloverhead, 0)       # Turn off overhead estimate
  # ret =  gptlinitialize()
#endif
  #
  # Loop over blocks
  #
  fluxes = ty_fluxes_broadband(FT)

  nblocks_iterations==nothing && (nblocks_iterations = nblocks)
  for b = 1:nblocks_iterations
    @show b/nblocks
    fluxes.flux_up = flux_up[:,:,b]
    fluxes.flux_dn = flux_dn[:,:,b]
    #
    # Compute the optical properties of the atmosphere and the Planck source functions
    #    from pressures, temperatures, and gas concentrations...
    #
#ifdef USE_TIMING
    # ret =  gptlstart('gas_optics (SW)')
#endif
    gas_optics!(k_dist,
                p_lay[:,:,b],
                p_lev[:,:,b],
                t_lay[:,:,b],
                gas_conc_array[b],
                optical_props,
                toa_flux)
    # test_data(optical_props.tau, "DriverSW_op_tau")
#ifdef USE_TIMING
    # ret =  gptlstop('gas_optics (SW)')
#endif
    # Boundary conditions
    #   (This is partly to show how to keep work on GPUs using OpenACC in a host application)
    # What's the total solar irradiance assumed by RRTMGP?
    #
#ifdef _OPENACC
    zero_array!(def_tsi)
    #$acc parallel loop collapse(2) copy(def_tsi) copyin(toa_flux)
    # for igpt = 1:ngpt
    #   for icol = 1:block_size
    #     #$acc atomic update
    #     def_tsi[icol] = def_tsi[icol] + toa_flux[icol, igpt]
    #   end
    # end
#else
    #
    # More compactly...
    #
    def_tsi[1:block_size] = sum(toa_flux, dims=2)
    # test_data(def_tsi, "def_tsi")
#endif
    #
    # Normalize incoming solar flux to match RFMIP specification
    #
    #$acc parallel loop collapse(2) copyin(total_solar_irradiance, def_tsi) copy(toa_flux)
    for igpt = 1:ngpt
      for icol = 1:block_size
        toa_flux[icol,igpt] = toa_flux[icol,igpt] * total_solar_irradiance[icol,b]/def_tsi[icol]
      end
    end
    # test_data(toa_flux, "toa_flux")
    #
    # Expand the spectrally-constant surface albedo to a per-band albedo for each column
    #
    #$acc parallel loop collapse(2) copyin(surface_albedo)
    for icol = 1:block_size
      for ibnd = 1:nbnd
        sfc_alb_spec[ibnd,icol] = surface_albedo[icol,b]
      end
    end
    # test_data(sfc_alb_spec, "sfc_alb_spec")
    #
    # Cosine of the solar zenith angle
    #
    #$acc parallel loop copyin(solar_zenith_angle, usecol)
    for icol = 1:block_size
      mu0[icol] = fmerge(cos(solar_zenith_angle[icol,b]*deg_to_rad), FT(1), usecol[icol,b])
    end
    # test_data(mu0, "mu0")

    #
    # ... and compute the spectrally-resolved fluxes, providing reduced values
    #    via ty_fluxes_broadband
    #
#ifdef USE_TIMING
    # ret =  gptlstart('rte_sw')
#endif

    rte_sw!(optical_props,
            top_at_1,
            mu0,
            toa_flux,
            sfc_alb_spec,
            sfc_alb_spec,
            fluxes)


#ifdef USE_TIMING
    # ret =  gptlstop('rte_sw')
#endif
    #
    # Zero out fluxes for which the original solar zenith angle is > 90 degrees.
    #
    for icol = 1:block_size
      if !usecol[icol,b]
        flux_up[icol,:,b] .= FT(0)
        flux_dn[icol,:,b] .= FT(0)
      end
    end
  end
  # test_data(fluxes.flux_up, "fluxes_flux_up")
  # test_data(fluxes.flux_dn, "fluxes_flux_dn")

  if nblocks_iterations == 1
    @test all(fluxes.flux_up .â‰ˆ [129.12970203848914 129.1176086392585 129.10710388301106 129.0942969236179 129.08001272839974 129.0654088660936 129.05137673740663 129.03910523886586 129.030173663355 129.02626610318217 129.0289854682244 129.03910629527158 129.05752840605385 129.08571201074082 129.12509931135077 129.1696507910308 129.21647878438944 129.24943284330016 129.24713521815386 129.17984777077027 129.01887042735845 128.74120649104614 128.3383564193479 127.81338483673755 127.17151820475685 126.42792070351035 125.60261508450036 124.7012917722245 123.73481580188381 122.71152291801322 121.63804164504391 120.52039487649402 119.35891619617526 118.15916352870111 116.93059395938985 115.68107313386258 114.41798980965294 113.13685185778152 111.8425518138976 110.55266289819943 109.26486541674747 107.99357420619816 106.77219156881873 105.62014667349702 104.53921816777115 103.52790701685159 102.59298966955028 101.74952686114972 101.01467091105192 100.40318382049928 99.92232805027567 99.5617576987867 99.29088171898928 99.09323307013615 98.95411450227687 98.86021554261015 98.79604575347992 98.75337042034496 98.72643811972918 98.7104310567514 98.70120073285332; 273.3687562893531 273.35905143171567 273.3516664578227 273.34437618418593 273.33872706735804 273.33679125545996 273.3406902121004 273.35316542245613 273.37662263049754 273.4135973739975 273.46635720429657 273.5370682017224 273.6297717290389 273.74977162806897 273.9035148364246 274.08248487664366 274.28391209436586 274.48035490515446 274.6720769540005 274.8446318217299 274.9548550894575 274.957075144986 274.82224814660196 274.5565778014208 274.1622390970698 273.6573398240962 273.07163004350775 272.413139204987 271.6835951947183 270.8846555385105 270.019759182599 269.0962396673512 268.1160850742764 267.09041272839664 266.0358540566782 264.9481055722083 263.8293237246317 262.68508490257574 261.51550048176426 260.3192196768091 259.109151096974 257.90962444313 256.76526233001385 255.75034258530823 254.87950381659473 254.14565542423185 253.60624420826778 253.23078476656198 252.9944313945063 253.00199077146675 253.15142509163857 253.35730064588012 253.58170724921158 253.81919453236694 254.05618589724298 254.27633310278384 254.47109386508683 254.63195745443943 254.7554723256672 254.84395345952902 254.90514094723875; 113.4617703948671 113.45016302107497 113.44046702828673 113.42929352419749 113.41790487201712 113.40792087816097 113.40093040469694 113.39795706427368 113.39916652136719 113.40531490724173 113.41628309715274 113.43120710699614 113.44984018436858 113.47249318923681 113.49935609167436 113.52997004822802 113.56335435872954 113.60468907449962 113.63721775498003 113.63074944239504 113.55052970840747 113.35548421194424 113.01388357426454 112.52066906627832 111.88304206230188 111.12450093916027 110.26332265578449 109.29946814278622 108.23466065790353 107.07081233431622 105.8105029636374 104.4582929020674 103.01228495038669 101.4730614343888 99.84356469496095 98.13246725019373 96.37331030884332 94.59517910479718 92.79294989838571 90.92532711098076 88.9937421853351 87.0473055565188 85.11272099641052 83.19371072401435 81.29541695704235 79.43657709714715 77.64678744984383 76.00824179135368 74.5215363204131 73.2557555129041 72.16943285063232 71.25166460133757 70.47857511169744 69.84050433333341 69.32814068242658 68.92972709490114 68.63114717009506 68.41693081393089 68.27074375373832 68.17627134646361 68.11802529161899; 886.3022121533969 886.3034187962927 886.3096804191887 886.3261378156656 886.3557659503758 886.4019278775852 886.4669643698207 886.5509937319442 886.6547862823145 886.7838865276317 886.9452367960953 887.1474272488184 887.3980179651785 887.7042918761442 888.0730052172428 888.5163645618084 889.0457092860173 889.6768685478861 890.4346910629533 891.3517585190773 892.4499625207321 893.7474205212378 895.1540451146193 896.5700232821439 897.8920044175414 899.0901861394404 900.2447369371273 901.2968601625503 902.2459990434229 903.0881936029998 903.8054659243745 904.426316069882 904.945219415118 905.42351959707 905.9106595034197 906.4281435954002 907.0258314244996 907.679277896443 908.4145277670979 909.3532148100293 910.5322014566793 911.9178934358137 913.4878472796736 915.2473557306931 917.1569977549728 919.2470459585796 921.4546899969268 923.5905278296781 925.6998733801943 927.9530595108074 930.3616588195948 932.8420822829721 935.2641267940129 937.4908782979991 939.4243813939609 941.0526875519489 942.3953736096091 943.4437055229399 944.2234594146959 944.7692389850461 945.15639777753; 315.50400837501246 315.49533445856196 315.4895283786096 315.4849986106186 315.48362402184796 315.487949479577 315.50032586879945 315.52276286173105 315.5574374123357 315.60709892087755 315.67443452963215 315.7616809735965 315.87262454116575 316.01106304359104 316.1808138488143 316.3802879329014 316.6092066197549 316.8630044324933 317.14132209249567 317.4329543560846 317.6988863278232 317.883253083889 317.93348143062724 317.8422831462955 317.61342323040896 317.2677446862095 316.8346589606703 316.3163055552596 315.72228564202845 315.06145855781796 314.3388305549955 313.56345123328947 312.7346443742116 311.8595341883758 310.9439531510052 309.99965997060906 309.03769586898505 308.0727008720852 307.1210506920956 306.20074050699327 305.3336370998642 304.54040723010024 303.84700761255675 303.279008835567 302.85409947289435 302.58616750723047 302.4772639913221 302.5043205385287 302.6437373437802 302.8903612089911 303.2537439867874 303.71284193966056 304.25440812605206 304.84938988756994 305.46716430591516 306.0684934746834 306.61710341324016 307.08609221507123 307.4597645931642 307.7368268127193 307.93133588522363; 117.97809609691447 117.96650953190655 117.95679741995555 117.94547820383896 117.93372517432788 117.92317479581178 117.91543804108804 117.91176670334653 117.91237418855579 117.91819145113405 117.92891690678974 117.94328232040114 117.96029949655332 117.978584926482 117.99570972022738 118.00939781507033 118.01467020366783 118.01566331738417 118.008825934461 117.97965089392503 117.89606238925998 117.72431447042591 117.43677849032696 117.01357181641 116.4594494861849 115.78802768809805 115.01106826819328 114.12381182814036 113.1238675998085 112.00974726460883 110.78335479020096 109.45510932896796 108.02329554459914 106.49571520543269 104.87891056031135 103.18211689020107 101.41663949479229 99.59877702719662 97.73929269057295 95.83555020569214 93.87948001421242 91.8923012783706 89.90542878134016 87.93854763232385 86.03006048005952 84.20887258051819 82.48426486041527 80.87923710159312 79.42350989037153 78.13558318970932 77.02278135361088 76.14011067568525 75.43520001635788 74.86249127883741 74.41345959591438 74.07810646295235 73.8365849377793 73.67034954935825 73.56097280101967 73.49231503856706 73.45051701109287; 104.99512681026627 104.98324823426319 104.97302213738647 104.96066711468846 104.94742690129954 104.93505127418793 104.92469024395017 104.91746847327735 104.91589636091818 104.92220477353679 104.93852300031415 104.96659872164267 105.00883095101835 105.06814573203215 105.14824875100491 105.24013492069088 105.3389028070115 105.42270405330216 105.46825544934822 105.43832222020309 105.3033392854926 105.03950119332077 104.63415376509911 104.09805309209077 103.44270889198518 102.67621365207872 101.80797826795224 100.83825118621745 99.76858754914048 98.60067701892686 97.33675878100564 95.98054949825796 94.52936320532686 92.98458189071309 91.35052338110911 89.6339707126855 87.84202974260363 85.98621560252134 84.08484480618883 82.15626450392438 80.20827914620314 78.25347491997893 76.30972694613762 74.3889051273246 72.49208138862716 70.64580487995988 68.87823314778521 67.20839039933028 65.8906949301213 64.70753032502085 63.6607290287594 62.77073348005514 62.04474570141533 61.45395788746744 60.98659511411164 60.62889632246113 60.364948201825875 60.177896583202454 60.05145256712154 59.97012866179135 59.91976603785604; 277.2718954819975 277.26294718037684 277.25667978338515 277.25140013515374 277.24881631264384 277.2517111307205 277.26197330200205 277.2817665084385 277.3136864023626 277.36131487930595 277.42822983392495 277.51864940080327 277.6367132399571 277.78770767490937 277.9777077492809 278.202585841183 278.46280287426083 278.74484683937146 279.0394811318677 279.3173717142508 279.5266740533587 279.605803719837 279.5006620304033 279.23223465136505 278.8158209272765 278.2873819548649 277.6779280111671 276.98998849480927 276.23027591773166 275.40370578338815 274.51315368183384 273.56195223188337 272.55228037984324 271.4934711960223 270.3905244410244 269.2515672836422 268.0890202481596 266.92719024348423 265.7722344586084 264.59397403151 263.38517510577094 262.1725654873756 260.9927271023097 259.8936577828281 258.90023737682077 258.0153920405544 257.33385389833325 256.95602699011357 256.86441157383734 256.9936593397095 257.28857621410987 257.7156720446431 258.24817134453656 258.84954471517966 259.48523896773315 260.11752266578134 260.7048148749345 261.23518058558403 261.67256800723857 261.98478314983424 262.19207361579475])
    @test all(fluxes.flux_dn .â‰ˆ [757.3546564625509 757.1549395878518 756.8449256623039 756.2955967116702 755.5121848222662 754.5479630214242 753.489149180891 752.4253225334915 751.3806832401509 750.3412734357998 749.277250954442 748.1612219418861 746.9710966202641 745.6882308407531 744.3015358832204 742.8340601900231 741.267844157528 739.6457797995691 737.9953217655625 736.3602521061449 734.7542956506572 733.1564269920283 731.6704349192958 730.2496473766421 728.8501658031927 727.3936412736404 725.8544894832975 724.2372843921779 722.5152224512415 720.6949100777258 718.7175294808218 716.3328325756838 713.4723676003634 707.9128905571862 698.9107769045135 689.2394485373374 679.7679785910311 672.26519050553 666.0640310557349 659.822664648285 654.5135903330032 649.4860114062079 643.2690293955783 635.9822656451115 628.6348635835951 621.8070373257938 615.4703236233506 609.4112841017339 603.4695509827327 597.6054124905542 591.9078719090405 586.6173736504154 582.0328581328957 578.1648708418053 574.9754974299408 572.4094947423976 570.4253826282596 568.9415635322708 567.8723911443401 567.1338390803381 566.6386606291501; 823.6365177507362 823.4316359198175 823.1136181608762 822.5333140899263 821.6890263961872 820.6381644791068 819.476429987963 818.3126666912013 817.1976553050596 816.1197150953848 815.0491156396814 813.9517359423077 812.7951625006897 811.5543516309565 810.212337982101 808.8011001020458 807.3145152420831 805.8073019853293 804.2324759282897 802.5852512122003 800.9133014843967 799.253667236361 797.6996341640316 796.2104187561878 794.7898311868207 793.3673209445997 791.9110022624901 790.2949872409665 788.5350153726398 786.7152304090849 784.6725305816971 782.1647604574887 778.743615751517 773.7626354484454 767.0173336365224 760.8777615660101 755.4574592464941 750.5490345390745 746.3514554452728 743.0478906372953 740.2796110500522 737.4898465545655 733.5477545914288 726.700751435575 718.3475141864657 709.9727787880382 701.3302467109094 693.3814113911384 686.3512262552861 679.4482700305589 673.4384758939111 668.5093888449842 664.5226562442655 661.2730121022265 658.6468149668206 656.5689677134103 654.9615153684125 653.7627424772953 652.908431308439 652.3277694200327 651.9405450003179; 1406.6914062499993 1406.466092839667 1406.1231032266944 1405.481063711049 1404.4925116821034 1403.1558158323837 1401.5403281560998 1399.8119649505882 1398.1215384435523 1396.5055525440243 1394.964663573294 1393.4579786111258 1391.9351965050387 1390.3585296613476 1388.7130387844684 1386.9794401129222 1385.144255202884 1383.1433166427917 1381.0331351179225 1378.9015499795291 1376.7898341873217 1374.722718683158 1372.8237905522055 1371.0684527683707 1369.3809572488199 1367.652490659863 1365.781403862699 1363.6777980507175 1361.411546189625 1358.9971740383064 1356.058044327367 1351.8130084444545 1345.7499333115634 1338.5075313683653 1330.7967219305763 1321.5809809463735 1304.038600210556 1282.5884299482818 1264.0808039648123 1252.0243074328453 1244.1966664308206 1237.0227490343088 1229.7906887231468 1223.3167682483247 1218.0727100237225 1213.802103192724 1209.836759953281 1203.330144233772 1195.523002177604 1185.2981372909508 1175.4282655420975 1166.5814512701893 1159.1755537905008 1153.0818764424155 1148.1350727270337 1144.197191123181 1141.1435499797929 1138.8565176054858 1137.2142766463512 1136.0822385893446 1135.3005173916604; 1404.3244628906252 1404.0789000484046 1403.734755517395 1403.095345703324 1402.1542896918183 1400.953259436397 1399.57257168872 1398.1651956027154 1396.8033906883243 1395.481838287553 1394.1917059008597 1392.9078144966606 1391.610506911567 1390.2826462617259 1388.9295776549818 1387.5267646918944 1386.0658692626712 1384.5286300787438 1382.8784414917961 1381.0938009707052 1379.1493018306355 1377.0513675890427 1374.9236254830166 1372.8697447318518 1370.9527246792543 1369.1864869095198 1367.5065347779896 1365.8792074994017 1364.310444024362 1362.7635108658894 1361.2007548968754 1359.613477801617 1358.0295197569885 1356.2907572057484 1354.3096019993216 1351.8565671642498 1348.5167502240272 1345.0958709833492 1341.3636338983258 1336.3240859743894 1330.447989131941 1324.5189786984095 1318.819389218062 1313.3411546080201 1308.2130926614464 1303.3108261761574 1298.7887866465464 1294.9560688672557 1291.5672885129272 1288.279067002566 1285.101451686041 1282.157913475032 1279.5685400601333 1277.4065301691166 1275.6790728431624 1274.320778121155 1273.261638235398 1272.4704893099954 1271.9015593009083 1271.512931313603 1271.2422385128527; 1404.3244628906252 1404.100990746242 1403.756484837612 1403.116316176011 1402.14423207947 1400.8445687026306 1399.2851758646575 1397.6215656501658 1395.9622201439947 1394.3530722754224 1392.800485410173 1391.2714790971245 1389.7137109097857 1388.0993200417047 1386.4187359393554 1384.675683625922 1382.8633559706964 1380.97013901647 1378.968320909997 1376.8618784320454 1374.7003956938718 1372.5455949552838 1370.5195261035542 1368.5806869670519 1366.713763445076 1364.8664288539776 1363.0091435506267 1361.1072967893438 1359.174525868914 1357.062736302034 1354.6955163166826 1351.9344687013424 1348.5926130124114 1344.7652085669922 1340.4001190597826 1335.0881507600745 1328.5562780490136 1320.8702281580645 1312.199414855056 1302.7392561669867 1292.581927511382 1281.99381175997 1271.105779678392 1260.127959058868 1249.3354346090186 1238.9804784384867 1229.2856638465971 1220.507418047121 1212.7120552045142 1205.78007810178 1199.5480894113764 1194.0265941837442 1189.167769423446 1184.9686448179195 1181.4084331922184 1178.4755203330983 1176.1387802773502 1174.3468435163866 1173.033923785172 1172.1187029469854 1171.503161356123; 1404.3244628906252 1404.101894605929 1403.7538338786273 1403.1114626615224 1402.1344817722927 1400.8145152344448 1399.2027828733485 1397.4518057065093 1395.7235694968444 1394.07055941546 1392.4979159587158 1390.9673368009542 1389.4315132994182 1387.86189116367 1386.2540986753834 1384.5892407085478 1382.8567606370857 1380.977475483283 1378.929612517982 1376.7414591947181 1374.4805501268752 1372.1756782624204 1369.9645064740027 1367.8525199254402 1365.8109718743242 1363.7805697055753 1361.6779147334576 1359.3820908116502 1356.8176988220323 1354.1231198916305 1351.2775536242614 1348.0476106116967 1343.5242549044988 1336.2588058131294 1326.824758592257 1315.5919063366696 1303.4138365409824 1290.122305301615 1276.9545573451348 1266.1343377042385 1258.9769997287349 1253.7954379882076 1248.9257333939001 1244.1644076239556 1237.868852224897 1229.5883655100808 1220.58986633212 1210.9827283365992 1200.62230341663 1190.0146175043196 1179.8031361413905 1169.2057014112156 1160.0061572331124 1152.6953247879708 1146.874066352805 1142.259061175218 1138.709683053935 1136.0729791523675 1134.1995903842621 1132.925106821437 1132.0648555503803; 1281.0402210156567 1280.823529126997 1280.5087426433695 1279.935144771012 1279.0338380906305 1277.7835691418618 1276.2688739138296 1274.6369824929463 1272.9595317922679 1271.2978175796673 1269.656798077388 1267.9996839916046 1266.2806265554677 1264.4738013367844 1262.5628766990044 1260.602048997101 1258.5867053819795 1256.581978112392 1254.622065484449 1252.7590079945753 1250.9816251870745 1249.2454346815189 1247.630646567887 1246.0558938816582 1244.473467957227 1242.8164460855407 1241.0661445687592 1239.1059046455177 1236.7324583780332 1233.7795363802147 1230.370751314378 1227.0571950600238 1223.8108190894388 1220.2139437634455 1215.4790636647472 1209.2570682410912 1202.8821848287746 1195.6600451733334 1184.7291290607748 1170.758350508488 1157.9030026259502 1146.5217659302946 1135.8604891714078 1126.5355557410342 1120.150397427582 1114.8138879444514 1109.065493566773 1102.7230077150543 1077.632325282449 1060.4134501428412 1047.3362922751714 1036.4677175286654 1027.186541914803 1019.7055016049751 1013.7272996539014 1009.0264621167256 1005.419010174073 1002.7454307576169 1000.8436698565642 999.5456936185893 998.6628516246052; 1400.2247314453125 1400.0014039134362 1399.6687636490801 1399.0493519456625 1398.1002064391112 1396.8167287262322 1395.273723895467 1393.6104508082067 1391.9341702757645 1390.2959636237533 1388.7013335578324 1387.1109344096285 1385.4845459100447 1383.786826766906 1382.0118473569953 1380.1786409476877 1378.2813588171696 1376.3372694827426 1374.3366059408243 1372.3189548153134 1370.3425886560387 1368.456579306126 1366.7759155497772 1365.2017923403005 1363.697161269114 1362.1603815932465 1360.5183899636124 1358.7202748756276 1356.7276106823351 1354.5510544682734 1352.235492547665 1349.7664188266874 1345.7853532117267 1338.4135167080951 1329.245299787484 1319.2469408240365 1308.6187993400988 1296.6631053459641 1284.685356601396 1274.9116671524823 1267.1350148640183 1260.0922041415633 1252.8039730810244 1244.419384135527 1235.164717257391 1225.7509506633571 1215.1189412234025 1203.0485776756625 1191.0664302945859 1180.2518814886812 1170.8801937083372 1162.8512164271654 1156.0080593135467 1150.2495564903904 1145.4679070365298 1141.5751936877737 1138.5005189177077 1136.1076510325518 1134.3437349695066 1133.1550917605657 1132.385340394676])
  else
    @test all(fluxes.flux_up .â‰ˆ [107.17645628575725 107.16485705381581 107.15500159589511 107.14332482474458 107.13105844297351 107.11977423395446 107.11068917309997 107.1052138802125 107.10522310874335 107.11321688872755 107.13131384552968 107.16197216470918 107.20901118257372 107.27693817086997 107.37037166552273 107.48230197250378 107.61187587077889 107.7254046297066 107.79338370609909 107.78709910580942 107.68917974800084 107.47586418724285 107.12504461648425 106.62541311600418 105.96825159198485 105.18718450694827 104.30914751202 103.33349673381801 102.26151521366657 101.0944213533843 99.83374161126487 98.48239498800763 97.03840595777622 95.50414955894959 93.88550635670595 92.19010083974497 90.42699681715479 88.60732787251936 86.74510606041116 84.8555012713839 82.95057926035673 81.0432148664494 79.1597341110469 77.32641657960164 75.56362393136092 73.88700788680194 72.31012971352736 70.85081529579648 69.52219818141049 68.33364127371553 67.2987582932914 66.40730461801674 65.65495485223005 65.05248423464899 64.57310895852275 64.20762696821348 63.93624287998075 63.746339500127505 63.61706228408125 63.53249797001177 63.47828325039661; 81.53354969473332 81.52103573705672 81.50993417330075 81.49607799816773 81.48050063882098 81.46483673371159 81.45051642509291 81.43843492266954 81.42844975932007 81.42097720227676 81.41525445625355 81.41029578494317 81.40632371813469 81.4030428020259 81.40004741501956 81.39333817659717 81.3795052093891 81.34675825055315 81.28037759913116 81.16046060789618 80.96000164946966 80.64308129257853 80.20149077654315 79.63836358057563 78.95639659422763 78.16338409611193 77.27461470974112 76.28923926911528 75.20924629815676 74.03701001954254 72.77592672573115 71.43087210784235 70.00079518375668 68.48814836081579 66.89768162655186 65.23675168624989 63.516013541329436 61.74833325913458 59.94515184025951 58.11729815016317 56.276252121436954 54.435321989945436 52.61273824414908 50.8484063656875 49.164283832437825 47.55194041517237 46.014073422003875 44.55387703859492 43.18809708843382 42.019909315145505 40.99045651068139 40.08662787097095 39.3138586556284 38.6631816448884 38.125081814337086 37.69307620541515 37.357954395751555 37.108478991388225 36.93154917164816 36.8122000885403 36.73357390505873; 77.76171957530805 77.74908644217061 77.73783284092436 77.72379266264821 77.70792255473307 77.69148294450403 77.6755377289418 77.66094093726903 77.64839106641591 77.63887066031872 77.63306108582428 77.63135664473268 77.63440693124333 77.64505048788213 77.66774848253948 77.69178042884056 77.71087386512694 77.69765648767152 77.6314334947906 77.48696290138928 77.24597995849305 76.89365245684294 76.42457237522717 75.83781170454276 75.13286939991842 74.32100934654821 73.41897736078869 72.42412163035583 71.3382130746906 70.16377689641506 68.90410065228158 67.5634840152708 66.14328244375592 64.64603158223099 63.07331141268934 61.43346738499507 59.739892425249344 58.0052528191267 56.24235328328413 54.46694901206516 52.68651025492397 50.90392304771361 49.14635795678234 47.43009571348879 45.76597730834857 44.17338899911275 42.66324973964939 41.28484396348775 40.02984730415998 38.89018308672539 37.87623246661726 36.9927628138881 36.227830917302484 35.57959691427276 35.04723380090626 34.62027269959363 34.288765390342775 34.041512300632455 33.865746950168514 33.74681836567576 33.668148891910604; 36.218952616790695 36.20458486413685 36.19114079273296 36.1734839329379 36.152118416306855 36.127493229361356 36.09974597019768 36.06877874032385 36.034314021377256 35.99569038690257 35.9516720911024 35.89989395505721 35.8376138166526 35.76200023138782 35.66937880904624 35.5544174684026 35.411140265221114 35.23092387354284 35.00390684236579 34.718042397318385 34.36181669409383 33.92114478106925 33.40558142651834 32.813843317694094 32.15192734903072 31.428719162966523 30.659986489610326 29.835145471472405 28.96222433184967 28.04778442291819 27.098051727409494 26.120542445977126 25.117912741246563 24.09606123983514 23.061624902308257 22.021347973086723 20.982468166873605 19.952395055038824 18.938326841023517 17.946904455709948 16.98380262939465 16.053836803235605 15.160113471256823 14.306078468615992 13.496123933549862 12.734093111660307 12.023372639400634 11.368570467416408 10.772534334050222 10.235306157419432 9.755313351967729 9.332266056861586 8.965386566219971 8.653045899498755 8.392904745576477 8.181925554975134 8.016258271291582 7.891368362052569 7.801645858619489 7.740317963033443 7.699317318996937; 113.42253692763659 113.41121222493695 113.40166439374761 113.39101064579927 113.38055919424916 113.37168314863398 113.36513490629133 113.36001205565863 113.35548282534494 113.35136810644966 113.34648496805231 113.33935414159322 113.32822901847237 113.31181111870802 113.28801828899012 113.25720501548298 113.2178799280371 113.17053667062356 113.11071451170815 113.02802592703709 112.90246148341548 112.70823587786285 112.42744044366339 112.04141843238891 111.53932085307981 110.91916284526138 110.19779522671398 109.35773882132034 108.40053447163969 107.32687864069321 106.13615455739777 104.83586329831456 103.42189142219026 101.90234007344728 100.28799302514022 98.58688110520713 96.81196220152682 94.97774393962517 93.10079111780941 91.19970317090394 89.2924596057745 87.39584681782816 85.52803219173401 83.7035006472905 81.93516381291906 80.23556056581235 78.61829745134662 77.09205823547686 75.68343894550404 74.39779790998087 73.23747116524984 72.21824688385996 71.35530269077417 70.6419098253536 70.07371141410334 69.62861021849511 69.28922159448167 69.04105865216245 68.86789399373345 68.75285009149881 68.67816317542022; 34.42978070163834 34.415374829032146 34.401874926357706 34.38437188954985 34.363966855166254 34.34118007127843 34.315758641764134 34.28694823083179 34.25370124810655 34.21485033233236 34.1686000739994 34.11248522172863 34.04375374256072 33.959764978473046 33.857322277060256 33.732182879674944 33.579490633714734 33.39318766463073 33.16523575283289 32.884764508126345 32.53737501807905 32.1071380142199 31.6035257921679 31.02427405532351 30.376081000364017 29.664920945491104 28.926852488884066 28.134877241378458 27.295808435198268 26.416634445001822 25.504061891113675 24.565898494612746 23.604582772464113 22.62585355068419 21.63658524499669 20.64331800979519 19.65303792938455 18.672491461021608 17.70808987364356 16.7659933737185 15.85191291896595 14.970991997860578 14.127487293697385 13.325242304986645 12.567313069904975 11.856133923667247 11.193890580901684 10.58256772277161 10.023628244233569 9.517905293442622 9.065786105320354 8.66783219965995 8.324239851975042 8.032751428954596 7.790381020027678 7.594059325188551 7.440136587027268 7.3242458470601415 7.241103992998436 7.184353151805274 7.146453697749866; 58.26581175518885 58.252352993322816 58.240027678741555 58.22418121273793 58.205573377483425 58.185226162986645 58.163859206085704 58.14200025091515 58.120035271195924 58.09823080516925 58.07636987068013 58.05344373542 58.028629191010005 58.001699407296755 57.97239931866862 57.93302556313485 57.87799520297802 57.787917881681835 57.64455983439961 57.42601510415106 57.11818749537989 56.70054898148179 56.181076287706766 55.56231738271584 54.8447788046131 54.03681743402376 53.14818634600976 52.17661652420655 51.12602386034655 50.0010263802171 48.807036811616975 47.5501657885174 46.23150249062615 44.85557460176921 43.42816768944743 41.95762401315768 40.45351774434591 38.92682938747204 37.38587329474948 35.84948832707931 34.32709923743261 32.82813129149574 31.362742907699182 29.939659550095847 28.56967219933352 27.270063938722103 26.051960888488257 24.922295733866836 23.888454250707806 22.954787360993247 22.119824646997802 21.38535843900998 20.745593479088203 20.201575858502494 19.748053148380457 19.380460091339156 19.092322607013237 18.8756226466433 18.720431486808177 18.61475399648522 18.54437313922906; 74.43430469210863 74.42147331928318 74.40996670241583 74.39545245364525 74.37869964320828 74.3607070884157 74.342253579481 74.3241955209461 74.30753619486079 74.2930977428454 74.28162468537803 74.27290013270475 74.26681413242227 74.26271337463531 74.25921383843752 74.25043437528089 74.23161058126992 74.18768172463152 74.10113581978223 73.9486070921226 73.70667038839503 73.35130395957236 72.88067826672051 72.29763409341909 71.60724297869025 70.814955869232 69.93079199793577 68.95243506250821 67.88202744532646 66.72198481551754 65.4762086550687 64.15159809051754 62.74813029347921 61.27028809089964 59.723336008362836 58.11256595069014 56.447062160161 54.739189130718394 53.000935072609614 51.24496522839962 49.48391007028236 47.73044687448532 45.99763367848545 44.299585859963585 42.65082560472267 41.062451884657186 39.60400465189381 38.26820941513441 37.04550224922953 35.94145488874443 34.95524267395779 34.097804116546115 33.35695415511437 32.728095971497986 32.20725762399221 31.78787654395779 31.4612386869721 31.217221487551768 31.04352382332793 30.9259133269051 30.84813301886025])
    @test all(fluxes.flux_dn .â‰ˆ [1403.266967773438 1403.060120533319 1402.7314586298883 1402.1246821840318 1401.1855847104985 1399.9039566132788 1398.3417234220522 1396.6270747996282 1394.8687394677283 1393.1296262052335 1391.4187290154998 1389.6936025605933 1387.9003306706277 1386.011965447884 1384.0193513301147 1381.975987262185 1379.863167706415 1377.8014074947816 1375.8208948305012 1373.9445673459222 1372.118384687682 1370.3195592924956 1368.6562878639863 1367.1232848854916 1365.7323171147411 1364.3063798776657 1362.6997016238456 1360.6255878686206 1357.731874168781 1354.0149885389553 1350.0197981426315 1345.1126218813192 1338.2979277669851 1328.0506131305556 1314.3820865037324 1299.0679247054486 1283.0976253835959 1266.9722262735522 1250.7628889568964 1234.74733350683 1219.8156868123635 1206.1981392390278 1192.689080708697 1178.9433169699573 1165.2866055042712 1152.1268757779926 1139.7058496238915 1127.9811524471086 1117.046263973469 1107.0086158626689 1097.7730429407618 1089.670366803971 1082.7013795079768 1076.5771463553006 1071.5178572282464 1067.3976181909952 1064.1809195528956 1061.7299507482326 1059.9737040030561 1058.7761432213526 1057.97147684163; 819.9310843279901 819.7310943241663 819.4074452155609 818.833915040774 817.9858174103296 816.8874921847708 815.6473951002025 814.420217483057 813.2876161002536 812.2078589779808 811.1465321984936 810.0666035637784 808.9275122889326 807.7064631951707 806.3916239338336 804.9854237667759 803.4757994702207 801.8860371584007 800.2319053198335 798.5381295154299 796.8352540033665 795.1648157146092 793.623879189004 792.1600462031593 790.7480675365568 789.3312097032331 787.8010499016575 786.120547996372 784.2547017454425 782.0913915720993 779.625181738862 776.8350883805316 773.7739981435981 770.5673733946034 767.327589436277 763.8779600062786 758.6416143861109 750.9403137123292 742.8935591395153 735.9179175322745 730.4323901767578 726.2963664891125 722.0963162934805 710.575710061999 695.7846127956847 684.1763049190433 675.2905939868715 668.7030366492824 663.2327499674927 653.2639870022914 644.4871681297927 637.3083017917595 631.2188873424917 626.2254193895801 622.2510053356522 619.1264148116951 616.7257995587677 614.944058420016 613.6762561117193 612.8119090988141 612.2262834473131; 787.9768488334178 787.7838051793227 787.469757100636 786.9017601552804 786.0670613850225 785.013370934787 783.8496483658195 782.7033168658312 781.6125100372929 780.5461005453641 779.4641686001731 778.3296022977707 777.1143171990834 775.7817545324397 774.3015827627567 772.748010523352 771.1134828221434 769.5007927292204 767.9285568936591 766.4264642868419 764.9659576778799 763.493864337903 762.1018182604834 760.7785648525287 759.5090029605481 758.2137269648306 756.7615137082717 755.1110886235487 753.2380279395494 750.8797037008566 748.0783745149805 745.1968670025352 738.3578787021034 730.43689414082 725.4034696367924 720.7020261561069 712.810529805983 702.4485316369511 691.2601683066562 679.484695667172 669.4614181552802 662.5255969985208 655.3081747924001 647.792933772232 640.6468444787382 633.2567576321156 626.0062910932379 616.2595711719456 606.7122945398697 598.4352313741832 591.0448979308175 584.4616302992486 579.0087914429204 574.5140050370412 570.7752558827717 567.790460066107 565.4811827124981 563.7615417660166 562.5355027621887 561.699737453758 561.1358622474404; 214.50004890967932 214.33477618420488 214.07964968805584 213.69788094829522 213.2669834975342 212.8492793774129 212.45540107323845 212.06870252712613 211.6669981895476 211.23650930170803 210.76402716463852 210.2385629600343 209.64904936043595 208.9847682338999 208.23994879699472 207.41499021344956 206.50432530468 205.51352002166317 204.44111502191407 203.29325915757101 202.04615767604633 200.6730907191555 199.25866246153583 197.82918059807656 196.41710090927964 195.019911521393 193.62331487337246 192.21676542630348 190.76735512052753 189.25971852650142 187.69823137718177 185.96414810523652 183.8826768033274 181.4704942044049 178.81717612812406 175.9531455860022 172.80610911677422 169.37072328732395 165.74593089495303 162.10633701629382 158.6498390701631 155.54678036826135 153.07797660419067 151.15690479175117 149.46038518301918 147.81198803810796 146.09407819385277 143.96334577418287 141.46179753879386 139.01679318067292 136.91617324499992 135.10962346755124 133.5532952161145 132.2350929053159 131.1436886768354 130.26899470014132 129.59282787395915 129.08894828335318 128.72971933612837 128.48523791197454 128.32196615211132; 1407.579345703125 1407.3262480688604 1406.94829245801 1406.2216051768726 1405.1105587529003 1403.6604824365306 1402.0137717835817 1400.4011583298566 1398.9106097712258 1397.5226617660503 1396.2131630583149 1394.9347036739846 1393.6472656931035 1392.317253074471 1390.932365361577 1389.4420863292169 1387.824854512962 1386.0275635018365 1384.0392615441526 1381.866984380946 1379.5459168736104 1377.1040326729312 1374.6965189598234 1372.3279893904992 1370.0135275590158 1367.7543526654658 1365.5048336123693 1363.1593883577275 1360.5991569418911 1357.9218422981296 1355.2697445619247 1352.285087973901 1348.5806265144183 1343.8929587061969 1337.6608614780366 1329.578526571549 1319.5184783313373 1307.9957371345395 1295.253930427158 1281.7114910019382 1268.008692173863 1254.699793496853 1241.9527751883077 1230.091533523047 1219.266030348579 1209.4989644258483 1200.7031251755054 1192.912115548335 1185.6563862104508 1179.0834154590898 1173.2800102816266 1168.0316892567623 1163.1671210481052 1158.8222143432695 1155.0056693448014 1151.8634732380865 1149.394908119543 1147.5298980133969 1146.186557360956 1145.2629298101144 1144.6361495766482; 200.65015776785972 200.45724531794104 200.17312055015122 199.7250422417426 199.22414290699845 198.77237768903862 198.36333774283997 197.98459725612278 197.6203041504284 197.25052248481515 196.86190614949504 196.435838623587 195.95347332093127 195.39951187136282 194.7599228359479 194.02254561172694 193.16322569836217 192.16379270036262 191.01304652533378 189.71708268823693 188.29667494298124 186.76273843802102 185.20485172507315 183.6420879808953 182.0982778436988 180.57607927687172 179.03248455252134 177.5133742120606 176.01833622581123 174.5509501792701 173.0850225533531 171.56685212331485 170.02170387300484 168.4236401171572 166.51233692190493 164.19690744314832 161.5479072192591 158.68548277843053 155.70237570325318 152.67812129503181 149.62206442594433 146.5773873192608 143.65280250765525 140.88779219640523 138.33360055774835 136.0428870115874 133.9681648239569 132.05935566674407 130.2848320974103 128.65683719334322 127.16557523270849 125.73551190132048 124.30852042778336 123.0162849910652 121.9336465794965 121.06411980664797 120.38783521265802 119.88308515491957 119.52163380050466 119.27429535793661 119.10757168659748; 469.05248035181717 468.8711669007251 468.5768707699327 468.06470274608967 467.3635024936988 466.56473633725807 465.7710883355205 465.02426796420383 464.2934015346912 463.5425256682658 462.75122316445 461.90158330850943 460.9710989220388 459.9338179612329 458.7677758705636 457.5057558159898 456.1386360662427 454.74572959460545 453.3634636500888 452.03113271303124 450.7131903064978 449.4066779267579 448.1868116208857 447.03367082996226 445.9009107738263 444.7039239253773 443.4110683966552 441.92311359895666 440.1126525343238 437.92251842060125 435.28518739328183 432.31966245372445 429.2055554227587 425.43562139070144 421.8336492720427 417.95566340743096 413.4654097297065 408.1490266228269 404.2129239598875 396.4939101394482 388.65887577540815 381.80430321133053 375.7553411067428 370.65855056170636 365.9997334436137 360.23649182298857 353.6458570470073 346.98206988090595 340.47417884118227 334.41746414915133 329.1804876484998 324.62742360462556 320.94004364779056 317.8586400799743 315.3789574489966 313.4172695040323 311.90650690010204 310.7845716978521 309.9858223312466 309.44120908568783 309.0729117519074; 714.2757577190599 714.0864272333574 713.7735260588412 713.2199124575843 712.4307131768553 711.4642780773496 710.4183593788142 709.38349049573 708.3786271617172 707.3787680409674 706.3481584180219 705.2636188661289 704.1043334224203 702.8607482815536 701.5206728261717 700.1010521827963 698.5888882372672 697.0240126490503 695.4320444613003 693.8501314799225 692.2876128578572 690.7345167149315 689.2705672061895 687.8641259884298 686.4858041418153 685.0436456779628 683.4957804403031 681.7817053017095 679.8544175581359 677.7127073106374 675.3506834427645 672.2740890402251 668.1177938939805 662.1307834847428 655.7482432968887 650.7920587272655 646.4465271366456 641.5535215844643 636.1919598125853 630.6488633676684 625.2400657799806 620.3163851149144 615.9882534356982 612.0540513371462 608.1094496355425 604.7047921945162 588.2550219335693 573.1148915777057 561.5047568347819 551.9678904762463 544.1030328196157 537.1839651117285 531.536916617489 526.9888134098762 523.3428224680611 520.471231991648 518.2675105225503 516.6308569814099 515.466446509251 514.6729270760303 514.1355937279025])
  end

  #
  # End timers
  #

  #$acc exit data delete(optical_props%tau, optical_props%ssa, optical_props%g, optical_props)
  #$acc exit data delete(sfc_alb_spec, mu0)
  #$acc exit data delete(toa_flux, def_tsi)
  # --------------------------------------------------
  # unblock_and_write!(trim(flxup_file), "rsu", flux_up)
  # unblock_and_write!(trim(flxdn_file), "rsd", flux_dn)

end

@testset "Shortwave driver" begin
  datafolder = JRRTMGP.data_folder_rrtmgp()
  rfmip_file = joinpath(datafolder, "examples","rfmip-clear-sky", "multiple_input4MIPs_radiation_RFMIP_UColorado-RFMIP-1-2_none.nc")
  kdist_file = joinpath(datafolder, "rrtmgp", "data", "rrtmgp-data-sw-g224-2018-12-04.nc")

  run_driver(rfmip_file, kdist_file, 1)
  run_driver(rfmip_file, kdist_file)
end
